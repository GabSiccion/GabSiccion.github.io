{"mappings":"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","sources":["src/js/quiz.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, onValue, ref, push } from \"firebase/database\";\r\nimport { firebaseConfig } from \"./firebaseconfig\";\r\n\r\nfunction getSelectedCourse() {\r\n  let parameter = new URLSearchParams(window.location.search);\r\n  return parameter.get(\"course\");\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getDatabase();\r\nconst questionsRef = ref(db, `questions/${getSelectedCourse()}`);\r\nconst scoresRef = ref(db, `scores/`);\r\n\r\n// Document Elements\r\nconst elementnumber = document.getElementById(\"number\");\r\nconst elementQuestion = document.getElementById(\"question\");\r\nconst elementAButton = document.getElementById(\"aButton\");\r\nelementAButton.addEventListener(\"click\", answerSelected);\r\nconst elementBButton = document.getElementById(\"bButton\");\r\nelementBButton.addEventListener(\"click\", answerSelected);\r\nconst elementCButton = document.getElementById(\"cButton\");\r\nelementCButton.addEventListener(\"click\", answerSelected);\r\nconst elementDButton = document.getElementById(\"dButton\");\r\nelementDButton.addEventListener(\"click\", answerSelected);\r\nconst submitButton = document.createElement(\"a\");\r\nsubmitButton.className = \"btn btn-success\";\r\nsubmitButton.addEventListener(\"click\", quizEnd);\r\nsubmitButton.href = `exploration.html?course=${getSelectedCourse()}`;\r\nsubmitButton.innerHTML = \"Submit\";\r\nconst surveysubmitButton = document.createElement(\"a\");\r\nsurveysubmitButton.className = \"btn btn-success\";\r\nsurveysubmitButton.addEventListener(\"click\", quizEnd);\r\nsurveysubmitButton.href = `survey.html`;\r\nsurveysubmitButton.innerHTML = \"Submit & go to survey\";\r\n\r\nlet pagetitle = document.getElementById(\"pageTitle\");\r\npagetitle.innerHTML = `${getSelectedCourse().replace(/_/g, \" \")} Quiz`;\r\nvar questions,\r\n  currentQuestionNumber = 0;\r\nvar tracks = {};\r\n\r\n$(document).ready(function () {\r\n  onValue(questionsRef, (snapshot) => {\r\n    questions = snapshot.toJSON();\r\n    buildQuiz();\r\n  });\r\n});\r\n\r\nfunction buildQuiz() {\r\n  if (Object.keys(questions).length < currentQuestionNumber + 1) {\r\n    displayScore();\r\n  } else {\r\n    const { choices, question } = questions[currentQuestionNumber];\r\n    const { a, b, c, d } = choices;\r\n\r\n    elementnumber.innerHTML = currentQuestionNumber + 1;\r\n    elementQuestion.innerHTML = `<pre>${question}</pre>`;\r\n    elementAButton.innerHTML = `<pre>${a}</pre>`;\r\n    elementBButton.innerHTML = `<pre>${b}</pre>`;\r\n    elementCButton.innerHTML = `<pre>${c}</pre>`;\r\n    elementDButton.innerHTML = `<pre>${d}</pre>`;\r\n  }\r\n}\r\n\r\nfunction answerSelected(evt) {\r\n  const { correctchoice, track } = questions[currentQuestionNumber];\r\n\r\n  if (evt.target.value === correctchoice) {\r\n    updateTrackScores(track, true);\r\n  } else {\r\n    updateTrackScores(track, false);\r\n  }\r\n\r\n  currentQuestionNumber++;\r\n  buildQuiz(currentQuestionNumber);\r\n}\r\n\r\nfunction updateTrackScores(trackName, isCorrect) {\r\n  if (isCorrect) {\r\n    tracks[trackName] = tracks[trackName] + 1 || 1;\r\n  } else {\r\n    tracks[trackName] = tracks[trackName] || 0;\r\n  }\r\n\r\n  console.log(isCorrect);\r\n  console.log(tracks);\r\n}\r\n\r\nfunction displayScore() {\r\n  let quizBox = document.getElementById(\"quiz-box\");\r\n  let infoBox = document.getElementById(\"info-box\");\r\n  let scoresBox = document.getElementById(\"scores-box\");\r\n  let infoFooter = document.getElementById(\"info-footer\");\r\n  let submitButtonContainer = document.getElementById(\r\n    \"submit-button-container\"\r\n  );\r\n  submitButtonContainer.append(submitButton, surveysubmitButton);\r\n\r\n  let highestScoredTrack = Object.keys(tracks).reduce((a, b) =>\r\n    tracks[a] > tracks[b] ? a : b\r\n  );\r\n  let lowestScoredTrack = Object.keys(tracks).reduce((a, b) =>\r\n    tracks[a] < tracks[b] ? a : b\r\n  );\r\n  let total = Object.values(tracks).reduce(\r\n    (partialSum, a) => partialSum + a,\r\n    0\r\n  );\r\n\r\n  let totalScore = document.createElement(\"p\");\r\n  totalScore.className = \"h5\";\r\n  totalScore.innerHTML = `Your total score is ${total} out of ${\r\n    Object.keys(questions).length\r\n  }.`;\r\n  scoresBox.append(totalScore);\r\n\r\n  for (let track of Object.keys(tracks)) {\r\n    let line = document.createElement(\"p\");\r\n    line.className = \"info-line\";\r\n    line.innerHTML = `<span style=\"font-weight:Bold;\"> ${tracks[track]} </span> in ${track} `;\r\n    scoresBox.append(line);\r\n  }\r\n\r\n  let recommendation = document.createElement(\"p\");\r\n  recommendation.className = \"mt-2\";\r\n  if (highestScoredTrack == lowestScoredTrack && highestScoredTrack <= 0) {\r\n    recommendation.innerHTML = `You scored 0 in all tracks questions, try again.`;\r\n  } else if (highestScoredTrack == lowestScoredTrack) {\r\n    recommendation.innerHTML = `You scored equally in all tracks, you're recommended to take the track that aligns with your interests.`;\r\n  } else {\r\n    recommendation.innerHTML = `Recommended to take <span style=\"font-weight:Bold;\"> ${highestScoredTrack} </span>for this course.`;\r\n  }\r\n  scoresBox.append(recommendation);\r\n\r\n  quizBox.hidden = true;\r\n  infoBox.hidden = false;\r\n}\r\n\r\nfunction quizEnd() {\r\n  const date = new Date();\r\n  let day = date.getDate();\r\n  let month = date.getMonth() + 1;\r\n  let year = date.getFullYear();\r\n\r\n  let currentDate = `${day}/${month}/${year}`;\r\n  console.log(currentDate);\r\n\r\n  let userName;\r\n  let elementUserName = document.getElementById(\"userName\");\r\n  if (elementUserName.value.length != 0) {\r\n    userName = elementUserName.value;\r\n  } else {\r\n    userName = \"Anon\";\r\n  }\r\n  console.log(userName);\r\n\r\n  let course = getSelectedCourse().replace(/_/g, \" \");\r\n\r\n  let quizLength = Object.keys(questions).length;\r\n\r\n  let highestScoredTrack = Object.keys(tracks).reduce((a, b) =>\r\n    tracks[a] > tracks[b] ? a : b\r\n  );\r\n\r\n  let totalScore = Object.values(tracks).reduce(\r\n    (partialSum, a) => partialSum + a,\r\n    0\r\n  );\r\n\r\n  push(scoresRef, {\r\n    username: userName,\r\n    date: currentDate,\r\n    course: course,\r\n    quizlength: quizLength,\r\n    totalscore: totalScore,\r\n    tracksscores: tracks,\r\n    recommendation: highestScoredTrack,\r\n  });\r\n}\r\n"],"names":["$fXOuZ","parcelRequire","$13146f66d2c488bd$var$getSelectedCourse","URLSearchParams","window","location","search","get","initializeApp","$icg6M","firebaseConfig","$13146f66d2c488bd$var$db","$8tedJ","getDatabase","$13146f66d2c488bd$var$questionsRef","ref","$13146f66d2c488bd$var$scoresRef","$13146f66d2c488bd$var$elementnumber","document","getElementById","$13146f66d2c488bd$var$elementQuestion","$13146f66d2c488bd$var$elementAButton","addEventListener","$13146f66d2c488bd$var$answerSelected","$13146f66d2c488bd$var$elementBButton","$13146f66d2c488bd$var$elementCButton","$13146f66d2c488bd$var$elementDButton","$13146f66d2c488bd$var$submitButton","createElement","className","$13146f66d2c488bd$var$quizEnd","href","innerHTML","$13146f66d2c488bd$var$surveysubmitButton","replace","$13146f66d2c488bd$var$questions","$13146f66d2c488bd$var$currentQuestionNumber","$13146f66d2c488bd$var$tracks","$13146f66d2c488bd$var$buildQuiz","Object","keys","length","quizBox","infoBox","scoresBox","append","highestScoredTrack","reduce","a","b","lowestScoredTrack","total","values","partialSum","totalScore","track","line","recommendation","hidden","$13146f66d2c488bd$var$displayScore","choices","question","c","d","evt","correctchoice","target","value","$13146f66d2c488bd$var$updateTrackScores","trackName","isCorrect","console","log","date","Date","userName","currentDate","getDate","getMonth","getFullYear","elementUserName","course","quizLength","push","username","quizlength","totalscore","tracksscores","$","ready","onValue","snapshot","toJSON"],"version":3,"file":"quiz.cac01a1c.js.map"}